html {
  font-family: 'Roboto', sans-serif !important;
}

p {
  margin: 0;
  padding: 0;
}

/* remove arrows from input that has type=number */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  text-decoration: none;
}

body {
  margin: 0px !important;
}

/* Override the nav class, change the background color */
nav {
  background-color: #ffffff !important;
  color: #fff;
  width: 100%;
  height: 56px;
  line-height: 56px;
}

nav .nav-wrapper {
  position: relative;
  height: 100%;
}

.navbar-fixed {
  position: absolute;
  height: 56px;
  z-index: 2;
}

/* By default, the navbar is hidden */
.nav-default {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0.2s linear, opacity 0.2s linear;
}

/* To show the navbar, we will add this class using JQuery */
.nav-visible {
  visibility: visible;
  opacity: 1;
  transition: opacity 0.2s linear;
}

/*
  box-shadow: x-offset, y-offset, blur, spread, color
*/
.navbar-fixed nav {
  position: fixed;
  box-shadow: 0 2px 5px -2px rgba(0,0,0, 0.2);
}

.container {
  margin: 0 auto;
  width: 1152px;
  width: 90%;
}

/*
Override MaterializeCSS' class
width: We need to set the width 100% for text-align to work
text-align: center the text
color: hange the text's color color
*/
.brand-logo {
  width: 100%;
  text-align: center;
  color: #232323 !important;
}

/*
  Website logo
  margin: to center the image (mobile view, etc), we need to set it to auto
  background-size: We are using "contain" to prevent any scaling
  background-position: We are using "center" to keep the image in the center vertically
  margin/padding: We don't want any margin or padding, it will make our work confusing
  width/height: These props (width & height) will be later on responsive
  width: This value will create some space, because we don't want the logo to take the whole width of the grid's column
  cursor: We want the image to look "clickable", therefore, we need to this prop
*/
.website-logo {
  background-image: url("../images/logo/default.png");
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  padding: 0px;
  height: 56px;
  cursor: pointer;
}

/*
  Search container, it's also the container of the categories dropdown
  margin: to center the view (mobile view, etc), we need to set it to auto. !important prop because "row" class has margin and we want to cancel that margin from it (check the html markup)
  height: Same as our navbar's height, this means, this will be changed too in responsive elements
  width: Take the whole width of our parent (grid's column)
  background-color: Background color is set according to the mockup
*/
.search-container {
  margin: auto !important;
  border-radius: 15px;
  height: 56px;
  width: 100%;
  background-color: #f2f2f2;
}

/*
  Search icon
  text-align: the width of the material-icons class is bigger than the icon's actual size, so let's center it
  top: override the default top margin, and set our own to make it center vertically (we might need to make it responsive!)
  color: Set the color to the same placeholder's color
*/
.search-icon {
  text-align: center;
  color: #d1d1d1 !important;
}

.search-input::placeholder {
  color: #d1d1d1 !important;
}

.search-input, search-input:focus {
  font-size: 16px;
  height: 100% !important;
  border-bottom: 0px !important;

  box-shadow: none !important;
  background-color: transparent;
  border: none;
  outline: none;
  width: 100%;
}

/*
  display: flex, so that we can "center" the content of the div
*/
.searchbar-category-container {
  display: flex;

}

/*
  Modify the text in the search category dropdown
  text-align: center the text
  text-overflow, overflow, white-space: replace the text with dots if there's no space for it (helpful with responsive design)
  width: let it take the available space
*/
.searchbar-category-dropdown {
  font-size: 16px;
  vertical-align: middle;
  text-align: center;
  text-overflow: ellipsis;
  overflow: hidden;
  width: 100%;
  white-space: nowrap;
  align-self: center;
  cursor: pointer;
}

/*
  the "after" prop means to set this after the div's content
  We are using this to insert the dropdown icon (small arrow)
  font-family: We need to tell css that it's a font of the icons family (Material Icons)
  content: this is similar to "<i>expand_more</i>", we need to specifiy the icon
  margin-left: an elegant margin to make it sexy :)
  vertical-align: keep it in the middle vertically
*/
.searchbar-category-dropdown::after {
  font-size: 15px !important;
  font-family: 'Material Icons';
  content: "expand_more";
  margin-left: 5px;
  vertical-align: middle;
  text-align: center;
}

/*
  vertical line (divider)
  height: let this take the whole available height
  border-left: Set a vertical line on the left of the div
*/
.vertical-left-line {
  height: 1px !important;
  border-left: 1px solid rgba(0, 0, 0, 0.1);
}

/*
  vertical & horizontal align of the content
  align-items: vertical
  justify-content: horizontal
*/
.categories-dropdown-container {
  align-items: center !important;
  justify-content: center !important;
}

/*
  position: relative, to let the items inside be relative to the parent
  display: inline-block, to have a row-like structure
*/
.categories-dropdown {
  position: relative;
  display: inline-block;
}

/*
  display: none, hidden by default
  position: absolute, inside the relative parent
  background-color: our own choice
  min-width: our own choice
  border-radius: our own choice
  box-shadow: make some illusion that the dropdown is above the page's content
  margin-top: make some space between the dropdown and the dropdown text
  z-index: to make it above other content and not on the same "level"
*/
.categories-dropdown-content {
  display: none;
  position: absolute;
  background-color: #f2f2f2;
  min-width: 160px;
  border-radius: 5px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  margin-top: 10px;
  left: -100%;
  z-index: 1;
}

/*
  color: our own choice
  padding: y x padding
  display: block, to make it visible and standalone
  cursor: make the item clickable
*/
.categories-dropdown-item {
  color: black;
  padding: 12px 16px;
  display: block;
  cursor: pointer;
}

/*
  change the color of the dropdown item after hovering over it
*/
.categories-dropdown-item:hover {
  background-color: rgba(0, 0, 0, 0.1)
}

.slider {
  width: 100%;
  position: relative;
  margin: auto;
}

/* Hide the images by default */
.slide {
  display: none;
}

.slide-active {
  display: flex !important;
}

.slide-image {
  width: 100%;
  border-radius: 15px;
}

.slide-fade-in {
  animation-name: slide-fade-in;
  animation-duration: 1.5s;
}

@keyframes slide-fade-in {
  from {opacity: .4}
  to {opacity: 1}
}

/*
  Generic styles for the slider changing buttons
  cursor: make it clickable
  user-select: don't make it selectable, make it act like a button
*/
.slide-previous, .slide-next {
  color: rgba(255, 255, 255, 0.5);
  font-size: 40px;
  position: absolute;
  cursor: pointer;
  user-select: none;
  bottom: 45%;
  transition: color 0.6s ease;
}

.slide-previous {
  left: 15px;
}

.slide-next {
  right: 15px;
}

/* On hover, add a black background color with a little bit see-through */
.slide-previous:hover, .slide-next:hover {
  color: rgba(255, 255, 255, 1);
}

.slider-dots {
  position: absolute;
  bottom: 0;
  bottom: 10px;
  left: 10px;
  user-select: none;
}

.slide-dot {
  cursor: pointer;
  height: 12px;
  width: 12px;
  margin: 0 2px;
  background-color: rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  display: inline-block;
  transition: color 0.6s ease;
  user-select: none;
}

.slide-dot-active, .slide-dot:hover {
  background-color: #dcbb76 !important;
}

/*
  placeholder for any future customizations
*/
.product {}

/*
  color: get the parent's color, don't set a custom color
  text-decoration: remove any underlines
*/
.product a {
  color: inherit;
  text-decoration: none;
}

/*
  background-color: flat white color.
  border-radius: flat radius.
  padding: to keep the image small and put more attention for the design
  position: relative would alloww us to set elements inside in relativity to the container (src: https://www.w3schools.com/css/css_positioning.asp)
*/
.product-image-container {
  background-color: #f5f5f5;
  border-radius: 15px;
  padding: 35px !important;
  position: relative;
}

/*
  width: let it take full width
  height: let it take full width
  object-fit: it's similar to background-fit, we contain the image and we don't scale it. We lit it fit well in its own image-ratio.
  object-position: position the image in the center.
*/
.product-image {
  width: 100%;
  height: 100%;
  object-fit: contain;
  object-position: center;
}

/*
  font-size: Title should be bigger than the location and smaller than the whole view of the image
  font-weight: Make it bold, but not too much bold
*/
.product-title {
  font-size: 16px;
  font-weight: 500;
  /* src: https://stackoverflow.com/a/13924997/5646429, used to limit the lines of a text */
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  /* number of lines to show */
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
}

/*
  font-size: just like before, it should be smaller than the title
  font-weight: the text should be light but "normal", we could call it "regular" size accoring to the Roboto font family.
*/
.product-location {
  font-size: 14px;
  font-weight: 300;
}

/*
  position: the position is absolute inside the relative container, which let us make the element hover
  bottom: bottom margin regarding to the container
  right: right margin regarding to the container
*/
.product-price-container {
  position: absolute;
  top: 15px;
  right: 0px;
}

/*
  font-size: just like the location, this is a minimal info and shouldn't take the attention from the title. The color of the price's background already does the job
  font-weight: bold but not that much
  background-color: to give it its own space
  border-top-left-radius: we want this to look like it's combined with the product grey rounded background
  border-bottom-left-radius: same as above
  padding-top: minimal padding, the main focus is on the x-axis and not the y-axis
  padding-bottom: just like above
  padding-right: we make the illusion that we made the price's background so wide, but it's actually just padding to make it a good design
  padding-left: just like above
*/
.product-price {
  font-size: 14px;
  font-weight: 500;
  background-color: #dcbb76;
  border-top-left-radius: 15px;
  border-bottom-left-radius: 15px;
  padding-top: 5px;
  padding-bottom: 5px;
  padding-right: 14px;
  padding-left: 14px;
}

.product-owner-check {
  font-size: 12px;
  background-color: #259425;
  color: white;
  border-radius: 50%;
  padding: 2px;
}

.product-owner-check:hover + .product-owner-check-info {
  display: flex;
}

.banner-product-add {
  background-color: #dcbb76a3;
  border-radius: 15px;
  padding: 8px;
}

.banner-product-add-text {
  color: #000000;
  font-weight: 500;
  font-size: 14px;
}

/*
  font-size: Category should have a big font size to grab the reader's attention
  font-weight: bold and thick, to give it proper attention
*/
.category-title {
  font-size: 22px;
  font-weight: 700;
  color: black;
}

.category-show-more {
  font-size: 22px;
  font-weight: 700;
  color: black;
}

/* filters styles */

.filters-container {
  background-color: #f5f5f5;
  border-radius: 15px;
  list-style-type: none;
  padding: 16px;
}

.filters-apply-button {
  font-size: 14px;
  font-weight: 500;
  width: 100%;
  padding: 5px 10px;
  border: none;
  border-radius: 5px;
  background-color: #dcbb76;
  border: none;
  outline: none;
}

.filters-title {
  font-size: 18px;
  font-weight: 600;
  color: black;
}

.filters-categories-list {
  list-style-type: none;
  margin: 0 !important;
  padding: 0px !important;
}

.filters-categories-list li {
  padding: 6px 0px;
}

.filters-categories-item:hover {
  background-color: rgba(221, 187, 118, 0.2);
  border-radius: 15px;
  padding: 4px 6px;
}

.filters-categories-item-selected {
  background-color: #dcbb76 !important;
  border-radius: 15px;
  padding: 4px 6px !important;
}

.filters-categories-item {
  font-size: 16px;
  font-weight: 400;
  text-decoration: none;
  color: black;
  padding: 4px 6px;
}

.filters-price-input::placeholder {
  color: #d1d1d1 !important;
}

/*
  remove any unwanted styles, such as border, outline, shadow
*/
.filters-price-input {
  font-size: 16px;
  height: 100% !important;
  box-shadow: none !important;
  background-color: transparent;
  border: 2px solid rgba(0, 0, 0, 0.2);
  border-radius: 5px;
  outline: none;
  font-weight: 400;
  width: 100%;
  text-align: center;
}

.checkbox-container {

}

/*
  Creating our own custom checkbox
  the idea is simple: we hide the default checkbox
  then, we use the label with the before & after selectors to create the checkbox we want
*/
/* hide the default checkbox, it makes him unrelavent to our document */
.checkbox:not(:checked),
.checkbox:checked {
  position: absolute;
  opacity: 0;
  left: -100%;
}

/* To understand more about the "+" selector, please read this: https://www.w3schools.com/cssref/sel_element_pluss.asp */
/* The following styles was "inspired" by external tutorials */
/* Yet, it's easy to understad what's going on and how to replicate what's happening in this code */
/* normal state of the checkbox with the label */
.checkbox:not(:checked) + label,
.checkbox:checked + label {
  position: relative;
  padding-left: 25px;
  cursor: pointer;
}

/* checkbox aspect, not checked */
.checkbox:not(:checked) + label:before,
.checkbox:checked + label:before {
  content: '';
  position: absolute;
  left: 0; top: 0;
  width: 15px; height: 15px;
  border: 2px solid #ccc;
  background: #fff;
  border-radius: 5px;
  transition: all .2s;
}

/* keep it focused with the primary color */
.checkbox:checked + label:before {
  background: #dcbb76;
  border: 2px solid #dcbb76 !important;
}
/* checked mark aspect, checked */
.checkbox:not(:checked) + label:after,
.checkbox:checked + label:after {
  content: 'check';
  position: absolute;
  top: 2px; left: 2px;
  font-size: 15px;
  color: #fff;
  background: #dcbb76;
  transition: all .2s;
  font-family: 'Material Icons';
}
/* checked mark aspect changes, transition state for the checked state */
.checkbox:not(:checked) + label:after {
  opacity: 0;
  transform: scale(0);
}
.checkbox:checked + label:after {
  opacity: 1;
  transform: scale(1);
}


/*
  We are using the same approach to mimic a onclick event without any javascript
  here, we will be using this for our chip class
  we will be removing the check icon
*/

.chip:not(:checked),
.chip:checked {
  position: absolute;
  opacity: 0;
  left: -100%;
}

.chip:not(:checked) + label,
.chip:checked + label {
  position: relative;
  padding-left: 10px;
  cursor: pointer;
  padding-right: 10px;
  padding-top: 2px;
  padding-bottom: 2px;
  background: #ccc;
  border-radius: 5px;
  transition: all .2s;
}

/* checkbox aspect, not checked */
.chip:not(:checked) + label:before,
.chip:checked + label:before {
  content: '';
  position: absolute;
  left: 0; top: 0;
  width: 100%; height: 100%;
}

/* keep it focused with the primary color */

/* checked mark aspect, checked */
.chip:not(:checked) + label:after,
.chip:checked + label:after {
  content: '';
  position: absolute;
  left: 0; top: 0;
  width: 100%; height: 100%;
  border-radius: 5px;
}

.chip:checked + label {
  background: #dcbb76;
  border-radius: 5px;
  transition: all .2s;
}

/* checked mark aspect changes, transition state for the checked state */
.chip:not(:checked) + label:after {
  opacity: 0;
  transform: scale(0);
}
.chip:checked + label:after {
  opacity: 1;
  transform: scale(1);
}

/*
  color: our own choice
  padding: y x padding
  display: block, to make it visible and standalone
  cursor: make the item clickable
*/
.sorting-dropdown-item {
  color: black;
  padding: 12px 16px;
  display: block;
  cursor: pointer;
}

/*
  change the color of the dropdown item after hovering over it
*/
.sorting-dropdown-item:hover {
  background-color: rgba(0, 0, 0, 0.1)
}

/*
  position: relative, to let the items inside be relative to the parent
  display: inline-block, to have a row-like structure
*/
.sorting-dropdown {
  position: relative;
  display: inline-block;
}

.sorting-dropdown-text::after {
  font-size: 15px !important;
  font-family: 'Material Icons';
  content: "expand_more";
  margin-left: 5px;
  vertical-align: middle;
  text-align: center;
}


/*
  Modify the text in the search category dropdown
  text-align: center the text
  text-overflow, overflow, white-space: replace the text with dots if there's no space for it (helpful with responsive design)
  width: let it take the available space
*/
.sorting-dropdown-text {
  font-size: 16px;
  vertical-align: middle;
  text-align: center;
  text-overflow: ellipsis;
  overflow: hidden;
  width: 100%;
  white-space: nowrap;
  align-self: center;
  cursor: pointer;
}


/*
  vertical & horizontal align of the content
  align-items: vertical
  justify-content: horizontal
*/
.sorting-dropdown-container {
  align-items: center !important;
  justify-content: center !important;
  display: flex;
  background-color: #f5f5f5;
  border-radius: 15px;
  padding: 10px;
}


.sorting-dropdown-content {
  display: none;
  position: absolute;
  background-color: #f2f2f2;
  min-width: 200px;
  border-radius: 5px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  margin-top: 10px;
  z-index: 1;
}

.products-list-information-text {
  font-size: 15px;
  font-weight: 300;
  color: rgba(0, 0, 0, 0.75);
}

.products-empty-text {
  padding: 20px;
  font-size: 24px;
  font-weight: 500;
  color: rgba(0, 0, 0, 0.75);
  text-align: center;
}

.pagination-icon {
  color: #000000;
  font-size: 22px;
  padding: 5px;
}

.pagination-icon-disabled {
  color: rgba(0, 0, 0, 0.5) !important;
}

.pagination-current-text {
  font-size: 16px;
  font-weight: 400;
  border-radius: 50%;
  background-color: #dcbb76;
  padding: 5px 10px;
  cursor: pointer;
  text-decoration: none;
  /* prevent the onfocus color change */
  color: inherit;
}

.categories-container {
  background-color: #f5f5f5;
  border-radius: 15px;
  padding: 1px;
}

/*
  lis-style-type: none, to remove the bullets from the items
*/
.categories-list {
  list-style-type: none;
  margin: 0 !important;
  padding: 15px !important;
}

.categories-list li {
  padding: 10px;
}

.categories-item-selected {
  background-color: #dcbb76;
  border-radius: 15px;
  padding: 6px 8px !important;
}

.categories-item {
  font-size: 17px;
  font-weight: 500;
  text-decoration: none;
  color: black;
  padding: 8px;
}

.separator-line {
  border-top: 1px solid rgba(0, 0, 0, 0.25);
}

.footer-title {
  color: black;
  font-size: 16px;
  font-weight: 600;
}

.footer-content {
  color: rgba(0, 0, 0, 0.75);
  font-weight: 400;
  font-size: 14px;
  margin-top: 10px;
}

.footer-social-icon {
  width: 24px;
  height: 24px;
}

.scroll-top-button {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0.2s linear, opacity 0.2s linear;
  position: fixed;
  /* Fixed/sticky position */
  bottom: 30px;
  /* Place the button at the bottom of the page */
  right: 30px;
  /* Place the button 30px from the right */
  z-index: 2;
  /* Make sure it does not overlap */
  cursor: pointer;
  /* Add a mouse pointer on hover */
  text-transform: lowercase;
  background-color: black;
  color: white;
  border: none;
  border-radius: 5px;
  height: 36px;
  padding: 0 16px;
  outline: none;
}

.scroll-top-button-show {
  visibility: visible;
  opacity: 1;
  transition: opacity 0.2s linear;
}



.cardview {
  width: 100%;
  padding: 15px;
  border-radius: 5px;
  box-shadow: 0 2px 5px 0px rgba(0,0,0, 0.2)
}

.product-slider-col {
  background-color: #f2f2f2;
  border-radius: 15px;

}

.product-slide {
  padding: 40px 0px;
}

.slide-button-product {
  color: rgba(0, 0, 0, 0.25);
}

.slide-button-product:hover {
  color: rgba(0, 0, 0, 0.75);
}

.slide-product-dot {
  background-color: rgba(0, 0, 0, 0.5);
}

.product-slide {
  width: 65%;
  margin: auto;
}

.product-page-subtitle {
  font-size: 14px;
  font-weight: 500;
}

.product-page-description {
  font-size: 13px;
  font-weight: 400;
}

.product-listing-input-title, .product-listing-input-description, .product-listing-input-price {
  font-size: 16px;
  width: 100%;
  box-shadow: none !important;
  background-color: transparent;
  border: 2px solid rgba(0, 0, 0, 0.2);
  border-radius: 5px;
  outline: none;
  font-weight: 400;
  text-align: left;
  padding: 5px;
  /* to understad why, please check this: https://stackoverflow.com/a/16907625/5646429 */
  box-sizing: border-box;
}

.product-listing-input-file{
  font-size: 16px;
  width: 100%;
  box-shadow: none !important;
  background-color: transparent;
  border: 2px solid rgba(0, 0, 0, 0.2);
  border-radius: 5px;
  outline: none;
  font-weight: 400;
  text-align: left;
  padding: 5px;
  /* to understad why, please check this: https://stackoverflow.com/a/16907625/5646429 */
  box-sizing: border-box;
}

.product-listing-input-description {
  min-height: 50px;
  resize: vertical;
}

.product-listing-input-title::placeholder, .product-listing-input-description::placeholder, .product-listing-input-price::placeholder {
  color: #d1d1d1 !important;
}

.product-listing-select {
  font-size: 16px;
  box-shadow: none !important;
  background-color: transparent;
  border: 2px solid rgba(0, 0, 0, 0.2);
  border-radius: 5px;
  outline: none;
  font-weight: 400;
  width: 100%;
  text-align: left;
  padding: 5px;
}

.product-listing-submit {
  font-size: 14px;
  font-weight: 500;
  padding: 5px 10px;
  border: none;
  border-radius: 5px;
  background-color: #dcbb76;
  border: none;
  outline: none;
}

/*
  helper class for text
*/
.text-subtitle {
  font-size: 17px;
}

.text-body-1 {
  font-size: 15px;
}

.text-body-2 {
  font-size: 15px;
  font-weight: 500 !important;
}

.text-weight-bold {
  font-weight: 700 !important;
}

.text-weight-medium {
  font-weight: 500 !important;
}

.text-weight-regular {
  font-weight: 400 !important;
}

/*
  helper class to make a div clickable
*/
.clickable {
  cursor: pointer !important;
}


/*
  helper class to set display to block
*/
.display-block-show {
  display: block !important;
}

/*
  helper class to make the text uppercase
*/
.text-uppercase {
  text-transform: uppercase;
}

/*
  position helpers
*/


.justify-content-center {
  justify-content: center;
}

.align-self-center {
  align-self: center !important;
}

.text-align-right {
  text-align: right !important;
}

.text-align-center {
  text-align: center !important;
}

.text-align-left {
  text-align: left !important;
}

.float-right {
  float: right !important;
}

/*
  width & height helpers
  it overrides the default values
*/
.fill-height {
  height: 100% !important;
}

.fill-width {
  width: 100% !important;
}

.fill-all {
  height: 100% !important;
  width: 100% !important;
}

/*
  marging & padding helpers
  (-number) stands for the amount of px
  x stands for horizontal
  y stands for vertical
  r stands for right
  l stands for left
  t stands for top
  b stands for bottom

  if you don't see any letters, it means all sides
*/
.margin-a-0 {
  margin: 0 !important;
}

.padding-a-0 {
  padding: 0 !important;
}

.margin-y-0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.margin-x-0 {
  margin-right: 0px !important;
  margin-left: 0px !important;
}

.margin-x-1 {
  margin-right: 4px !important;
  margin-left: 4px !important;
}

.margin-x-2 {
  margin-right: 8px !important;
  margin-left: 8px !important;
}

.margin-t-0 {
  margin-top: 0px !important;
}

.margin-t-1 {
  margin-top: 4px !important;
}

.margin-t-2 {
  margin-top: 8px !important;
}

.margin-t-3 {
  margin-top: 12px !important;
}

.margin-t-4 {
  margin-top: 16px !important;
}

.margin-b-0 {
  margin-bottom: 0px !important;
}

.margin-b-1 {
  margin-bottom: 4px !important;
}

.margin-b-2 {
  margin-bottom: 8px !important;
}

.margin-b-3 {
  margin-bottom: 12px !important;
}

.margin-b-4 {
  margin-bottom: 16px !important;
}

.margin-l-0 {
  margin-left: 0px !important;
}

.margin-l-1 {
  margin-left: 4px !important;
}

.margin-l-2 {
  margin-left: 8px !important;
}

.margin-l-3 {
  margin-left: 12px !important;
}

.margin-r-1 {
  margin-right: 4px !important;
}

.margin-r-2 {
  margin-right: 8px !important;
}

.margin-r-3 {
  margin-right: 12px !important;
}

.margin-r-4 {
  margin-right: 16px !important;
}

.padding-x-0 {
  padding-right: 0px !important;
  padding-left: 0px !important;
}

.padding-l-0 {
  padding-left: 0px !important;
}

.padding-l-1 {
  padding-left: 4px !important;
}

.padding-l-2 {
  padding-left: 8px !important;
}

.padding-r-1 {
  padding-right: 4px !important;
}

.margin-r-2 {
  padding-right: 8px !important;
}

.padding-r-3 {
  padding-right: 12px !important;
}

.padding-r-4 {
  padding-right: 16px !important;
}


/* z-index helper */

.z-4 {
  z-index: 4 !important;
}

.z-5 {
  z-index: 5 !important;
}

/*
  Grid system
    We are using flexbox to implement a responsive, dynamic grid that would help us achieve what we want.
    Basically, it consists of a row class and a col class. ]
    The col class has many subclasses for many screen sizes (xl, x, sm, lg)
*/
/*
  box-sizing: border-box to eleminate unwanted padding (src: https://www.w3schools.com/css/css3_box-sizing.asp)
  display: flex, to mark this a flex grid
  flex-wrap: wrap, so that when it reaches the maximum width, it gets to the other line
  flex-direction: row (left-to-right), so that we have multiple elements beside each other
*/
.row {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
}

/*
  each col class would have the same attributes but with different values
  box-sizing: border-box to eleminate unwanted padding (src: https://www.w3schools.com/css/css3_box-sizing.asp)
  flex: (src: https://css-tricks.com/almanac/properties/f/flex/)
  padding-right: Relative to font-size of the root element (responsive)
  padding-left: Relative to font-size of the root element (responsive)
  flex-grow: how much space it would take (src: https://css-tricks.com/snippets/css/a-guide-to-flexbox/)
  flex-basis: the base, default value before any content/space taken (src: https://css-tricks.com/snippets/css/a-guide-to-flexbox/)
*/
.col-xs,
.col-xs-1,
.col-xs-2,
.col-xs-3,
.col-xs-4,
.col-xs-5,
.col-xs-6,
.col-xs-7,
.col-xs-8,
.col-xs-9,
.col-xs-10,
.col-xs-11,
.col-xs-12 {
  box-sizing: border-box;
  flex: 0 0 auto;
  padding-right: 8px;
  padding-left: 8px;
  margin: 8px 0;
}

col-xs {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}

.col-xs-1 {
  flex-basis: 8.333%;
  max-width: 8.333%;
}

.col-xs-2 {
  flex-basis: 16.667%;
  max-width: 16.667%;
}

.col-xs-3 {
  flex-basis: 25%;
  max-width: 25%;
}

.col-xs-4 {
  flex-basis: 33.333%;
  max-width: 33.333%;
}

.col-xs-5 {
  flex-basis: 41.667%;
  max-width: 41.667%;
}

.col-xs-6 {
  flex-basis: 50%;
  max-width: 50%;
}

.col-xs-7 {
  flex-basis: 58.333%;
  max-width: 58.333%;
}

.col-xs-8 {
  flex-basis: 66.667%;
  max-width: 66.667%;
}

.col-xs-9 {
  flex-basis: 75%;
  max-width: 75%;
}

.col-xs-10 {
  flex-basis: 83.333%;
  max-width: 83.333%;
}

.col-xs-11 {
  flex-basis: 91.667%;
  max-width: 91.667%;
}

.col-xs-12 {
  flex-basis: 100%;
  max-width: 100%;
}

@media only screen and (min-width: 576px) {
  .container {
    width: 750px;
  }

  .col-sm,
  .col-sm-1,
  .col-sm-2,
  .col-sm-3,
  .col-sm-4,
  .col-sm-5,
  .col-sm-6,
  .col-sm-7,
  .col-sm-8,
  .col-sm-9,
  .col-sm-10,
  .col-sm-11,
  .col-sm-12 {
    box-sizing: border-box;
    flex: 0 0 auto;
    padding-right: 8px;
    padding-left: 8px;
    margin: 8px 0;
  }

  .col-sm {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }

  .col-sm-1 {
    flex-basis: 8.333%;
    max-width: 8.333%;
  }

  .col-sm-2 {
    flex-basis: 16.667%;
    max-width: 16.667%;
  }

  .col-sm-3 {
    flex-basis: 25%;
    max-width: 25%;
  }

  .col-sm-4 {
    flex-basis: 33.333%;
    max-width: 33.333%;
  }

  .col-sm-5 {
    flex-basis: 41.667%;
    max-width: 41.667%;
  }

  .col-sm-6 {
    flex-basis: 50%;
    max-width: 50%;
  }

  .col-sm-7 {
    flex-basis: 58.333%;
    max-width: 58.333%;
  }

  .col-sm-8 {
    flex-basis: 66.667%;
    max-width: 66.667%;
  }

  .col-sm-9 {
    flex-basis: 75%;
    max-width: 75%;
  }

  .col-sm-10 {
    flex-basis: 83.333%;
    max-width: 83.333%;
  }

  .col-sm-11 {
    flex-basis: 91.667%;
    max-width: 91.667%;
  }

  .col-sm-12 {
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width: 768px) {
  .container {
    width: 970px;
  }

  .col-md,
  .col-md-1,
  .col-md-2,
  .col-md-3,
  .col-md-4,
  .col-md-5,
  .col-md-6,
  .col-md-7,
  .col-md-8,
  .col-md-9,
  .col-md-10,
  .col-md-11,
  .col-md-12 {
    box-sizing: border-box;
    flex: 0 0 auto;
    padding-right: 8px;
    padding-left: 8px;
    margin: 8px 0;
  }

  .col-md {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }

  .col-md-1 {
    flex-basis: 8.333%;
    max-width: 8.333%;
  }

  .col-md-2 {
    flex-basis: 16.667%;
    max-width: 16.667%;
  }

  .col-md-3 {
    flex-basis: 25%;
    max-width: 25%;
  }

  .col-md-4 {
    flex-basis: 33.333%;
    max-width: 33.333%;
  }

  .col-md-5 {
    flex-basis: 41.667%;
    max-width: 41.667%;
  }

  .col-md-6 {
    flex-basis: 50%;
    max-width: 50%;
  }

  .col-md-7 {
    flex-basis: 58.333%;
    max-width: 58.333%;
  }

  .col-md-8 {
    flex-basis: 66.667%;
    max-width: 66.667%;
  }

  .col-md-9 {
    flex-basis: 75%;
    max-width: 75%;
  }

  .col-md-10 {
    flex-basis: 83.333%;
    max-width: 83.333%;
  }

  .col-md-11 {
    flex-basis: 91.667%;
    max-width: 91.667%;
  }

  .col-md-12 {
    flex-basis: 100%;
    max-width: 100%;
  }
}

@media only screen and (min-width: 992px) {
  .container {
    width: 1170px;
  }

  .col-lg,
  .col-lg-1,
  .col-lg-2,
  .col-lg-3,
  .col-lg-4,
  .col-lg-5,
  .col-lg-6,
  .col-lg-7,
  .col-lg-8,
  .col-lg-9,
  .col-lg-10,
  .col-lg-11,
  .col-lg-12 {
    box-sizing: border-box;
    flex: 0 0 auto;
    padding-right: 8px;
    padding-left: 8px;
    margin: 8px 0;
  }

  .col-lg {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }

  .col-lg-1 {
    flex-basis: 8.333%;
    max-width: 8.333%;
  }

  .col-lg-2 {
    flex-basis: 16.667%;
    max-width: 16.667%;
  }

  .col-lg-3 {
    flex-basis: 25%;
    max-width: 25%;
  }

  .col-lg-4 {
    flex-basis: 33.333%;
    max-width: 33.333%;
  }

  .col-lg-5 {
    flex-basis: 41.667%;
    max-width: 41.667%;
  }

  .col-lg-6 {
    flex-basis: 50%;
    max-width: 50%;
  }

  .col-lg-7 {
    flex-basis: 58.333%;
    max-width: 58.333%;
  }

  .col-lg-8 {
    flex-basis: 66.667%;
    max-width: 66.667%;
  }

  .col-lg-9 {
    flex-basis: 75%;
    max-width: 75%;
  }

  .col-lg-10 {
    flex-basis: 83.333%;
    max-width: 83.333%;
  }

  .col-lg-11 {
    flex-basis: 91.667%;
    max-width: 91.667%;
  }

  .col-lg-12 {
    flex-basis: 100%;
    max-width: 100%;
  }
}

.mobile-side-navigation-container {
  position: absolute;
  display: none;
}

@media only screen and (max-width: 800px) {
  .product-slide {
    width: 75%;
    margin: auto;
  }

  .product-page-subtitle {
    font-size: 13px;
    font-weight: 500;
  }

  .product-page-description {
    font-size: 12px;
    font-weight: 400;
  }

  .mobile-side-navigation-container {
      position: fixed;
      display: flex;
      height: 56px;
      width: 25%;
      z-index: 3;
      align-items: center;
  }

  .mobile-side-navigation-menu {
    position: fixed;
    font-size: 24px;
    color: #000000;
    z-index: 3;
    left: 20px;
    cursor: pointer;
    /* make it like the navbar transition */
    transition: margin-top 0.2s linear;
    user-select: none;
    outline: none;
  }

  .categories-col-container {
    opacity: 1;
    position: fixed;
    background-color: #f5f5f5;
    width: 75vw;
    height: 100vh;
    left: -100%;
    /* 56 + margin-t-2 = 56 + 8 = 64 */
    top: 64px;
    padding-top: 11% !important;
    z-index: 4;
    box-shadow: 2px 0px 5px -2px rgba(0,0,0, 0.2);
    transition: opacity 0.3s linear, left 0.3s linear, top 0.3s linear;
  }

  .categories-col-container-visible {
    opacity: 1 !important;
    left: 0% !important;
    transition: opacity 0.3s linear, left 0.3s linear, top 0.3s linear;
  }

  .categories-list {
    padding-top: 0px !important;
  }

  .filters-container {
    padding-top: 0px !important;
  }

  .category-title {
    font-size: 16px;
  }

  .slide-previous, .slide-next {
    font-size: 20px;
  }

  .category-show-more {
    font-size: 17px;
  }

  .slide-dot {
    width: 7px;
    height: 7px;
    margin: 0 1px;
  }

  .product-image-container {
    padding: 15px !important;
  }

  .product-price-container {
    position: absolute;
    top: 10px;
    right: 0px;
  }
  .product-price {
    font-size: 11px;
    border-top-left-radius: 15px;
    border-bottom-left-radius: 15px;
    padding-top: 2px;
    padding-bottom: 2px;
    padding-right: 10px;
    padding-left: 10px;
  }

  .product-title {
    font-size: 14px;
  }

  .product-owner-check {
    font-size: 10px;
    padding: 2px;
  }

  .product-location {
    font-size: 11px;
  }

  .searchbar-category-dropdown {
    font-size: 12px;
  }

  .sorting-dropdown-text {
    font-size: 12px;
  }

  .pagination-current-text {
    font-size: 12px;
  }

  .pagination-icon {
    font-size: 18px;
  }

  .products-list-information-text {
    font-size: 12px;
  }

  .products-empty-text {
    font-size: 15px;
  }

  .footer-title {
    font-size: 14px;

  }

  .footer-content {
    font-size: 12px;
  }

  .text-subtitle {
    font-size: 14px;
  }

  .text-body-1 {
    font-size: 12px;
  }

  .text-body-2 {
    font-size: 12px;
    font-weight: 500 !important;
  }

  .search-input::placeholder {
    font-size: 12px;
  }

  .product-listing-input-title::placeholder, .product-listing-input-description::placeholder, .product-listing-input-price::placeholder {
    font-size: 12px;
  }

  .filters-apply-button {
    font-size: 12px;
  }

  .product-listing-select {
    font-size: 12px;
  }

  .search-input, search-input:focus {
    font-size: 12px;
  }

  .search-icon {
    font-size: 20px;
  }

  .banner-product-add-text {
    font-size: 12px;
  }
}
