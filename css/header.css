html {
  font-family: 'Roboto', sans-serif !important;
}

/* Override the nav class, change the background color */
nav {
  background-color: #fff !important;
}

/* By default, the navbar is hidden */
.nav-default {
  display: none;
}

/* To show the navbar, we will add this class using JQuery */
.nav-visible {
  display: inherit !important;
}

/*
Override MaterializeCSS' class
width: We need to set the width 100% for text-align to work
text-align: center the text
color: hange the text's color color
*/
.brand-logo {
  width: 100%;
  text-align: center;
  color: #232323 !important;
}

/*
  Top bar, we are using our own because MaterializeCSS's navbar is NOT what we want
  This margin will be removed later
*/
.top-bar {
  padding-top: 5px;
  overflow: hidden;
}


/*
  Website logo
  margin: to center the image (mobile view, etc), we need to set it to auto
  background-size: We are using "contain" to prevent any scaling
  background-position: We are using "center" to keep the image in the center vertically
  margin/padding: We don't want any margin or padding, it will make our work confusing
  width/height: These props (width & height) will be later on responsive
  width: This value will create some space, because we don't want the logo to take the whole width of the grid's column
  cursor: We want the image to look "clickable", therefore, we need to this prop
*/
.website-logo {
  margin: auto;
  background-image: url("../images/logo/default.png");
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  padding: 0px;
  width: 150px;
  height: 50px;
  cursor: pointer;
}

/*
  Search container, it's also the container of the categories dropdown
  margin: to center the view (mobile view, etc), we need to set it to auto. !important prop because "row" class has margin and we want to cancel that margin from it (check the html markup)
  height: Same as our navbar's height, this means, this will be changed too in responsive elements
  width: Take the whole width of our parent (grid's column)
  background-color: Background color is set according to the mockup
*/
.search-container {
  margin: auto !important;
  border-radius: 15px;
  height: 50px;
  width: 100%;
  background-color: #f2f2f2;
}


/*
  Search icon
  text-align: the width of the material-icons class is bigger than the icon's actual size, so let's center it
  top: override the default top margin, and set our own to make it center vertically (we might need to make it responsive!)
  color: Set the color to the same placeholder's color
*/
.search-icon {
  text-align: center;
  top: 20% !important;
  color: #d1d1d1 !important;
}


.search-input, input:focus {

  height: 100% !important;
  border-bottom: 0px !important;
  -webkit-box-shadow: 0px !important;
          box-shadow: 0px !important;
}

/*
  Modify the text in the search category dropdown
  text-align: center the text
  text-overflow, overflow, white-space: replace the text with dots if there's no space for it (helpful with responsive design)
  width: let it take the available space
*/
.searchbar-category-dropdown {
  text-align: center;
  text-overflow: ellipsis;
  overflow: hidden;
  width: 100%;
  white-space: nowrap;
}

/*
  the "after" prop means to set this after the div's content
  We are using this to insert the dropdown icon (small arrow)
  font-family: We need to tell css that it's a font of the icons family (Material Icons)
  content: this is similar to "<i>expand_more</i>", we need to specifiy the icon
  margin-left: an elegant margin to make it sexy :)
  vertical-align: keep it in the middle vertically
*/
.searchbar-category-dropdown:after {
  font-size: 15px !important;
  font-family: "Material Icons";
  /*content: "expand_more";*/
  margin-left: 5px;
  vertical-align: middle;
}

/*
  vertical line (divider)
  height: let this take the whole available height
  border-left: Set a vertical line on the left of the div
*/
.vertical-left-line {
  height: 100% !important;
  border-left: 1px solid rgba(0, 0, 0, 0.1);
}





/*
  Override MaterializeCSS's class
  Change text's color and dropdown's background on :hover or
*/

.dropdown-content {
  background-color: #f2f2f2  !important;
}

.dropdown-content li > a, .dropdown-content li > span {
  color: #232323 !important;
}

.dropdown-content li:hover, .dropdown-content li.active {
  background-color: rgba(0, 0, 0, 0.09) !important;
}
